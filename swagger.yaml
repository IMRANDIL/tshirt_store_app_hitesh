openapi: "3.0.0"
info:
  title: "Tshirt Store REST API"
  description: "A Project of Tshirt Store, Creating a REST API for Tshirt Store"
  version: "1.0.1"
  contact:
    name: "Tshirt Store"
    url: "https://www.Tshirt.com"
    email: aliimranadil2@gmail.com

# servers:
#   - url: "https://localhost:5000/api/v1"
#     description: for local host - secure
#   - url: "http://localhost:5000/api/v1"
#     description: for local host - regular

servers:
  - url: "{protocol}://localhost:5000/api/{version}"
    description: for local host - secure
    variables:
      version:
        enum:
          - v1
          - v2
        default: v1
      protocol:
        enum:
          - http
          - https
        default: http

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /aia:
    get:
      tags:
        - String
      summary: returns a greet message from aia
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: string
                example: "Hello from AIA"
        400:
          description: Bad request
        500:
          description: Internal server error

  /aiaObject:
    get:
      tags:
        - Object
      summary: returns a unique aiaObject
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "1"
                  name:
                    type: string
                    example: "AIA"
                  passionate:
                    type: Boolean
                    example: true

        400:
          description: Bad request
        500:
          description: Internal server error

  /aiaArray:
    get:
      tags:
        - Array
      summary: returns an aiaArray with list of aiaObjects
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "1"
                    name:
                      type: string
                      example: "Learn JavaScript"
                    price:
                      type: number
                      example: 599
        400:
          description: Bad request
        500:
          description: Internal server error

  /myCourse/{courseId}:
    get:
      tags:
        - Array
      summary: returns a course by id
      parameters:
        - name: courseId
          in: path
          description: course id
          required: true
          default: 1
          schema:
            type: string
            example: "1"
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "1"
                  name:
                    type: string
                    example: "Learn JavaScript"
                  price:
                    type: number
                    example: 599
        400:
          description: Bad request
        500:
          description: Internal server error

  /addCourse:
    post:
      tags:
        - Array
      summary: adds a new course
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "1"
                name:
                  type: string
                  example: "Learn JavaScript"
                price:
                  type: number
                  example: 599

      responses:
        201:
          description: All good and success
          content:
            application/json:
              schema:
                type: boolean
                example: true

        400:
          description: Bad request
        500:
          description: Internal server error

  /courseQuery:
    get:
      tags:
        - String
      summary: returns a query message from response
      parameters:
        - name: location
          in: query
          description: name of the location
          required: true
          schema:
            type: string
            enum: ["New York", "London", "Paris"]
        - name: device
          in: query
          description: name of the device
          required: true
          schema:
            type: string
            enum: ["mobile", "tablet", "desktop"]
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                    example: "Araria"
                  device:
                    type: string
                    example: "mobile"
        400:
          description: Bad request
        500:
          description: Internal server error

  /upload:
    post:
      tags:
        - String
      summary: uploads a file
      parameters:
        - name: auth
          in: header

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary

      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
                    description: file to upload
        400:
          description: Bad request
        500:
          description: Internal server error
